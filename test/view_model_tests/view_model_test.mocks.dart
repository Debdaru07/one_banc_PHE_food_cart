// Mocks generated by Mockito 5.4.4 from annotations
// in munch/test/view_model_tests/view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:munch/service/common_post_api_handler.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T> extends _i1.SmartFake implements _i2.Future<T> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i3.RequestState.loading,
      ) as _i3.RequestState);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  _i2.Future<Response> postRequest<Request, Response>({
    required String? url,
    required Map<String, String>? headers,
    required Request? requestBody,
    required Map<String, dynamic> Function(Request)? toJson,
    required Response Function(Map<String, dynamic>)? fromJson,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postRequest,
          [],
          {
            #url: url,
            #headers: headers,
            #requestBody: requestBody,
            #toJson: toJson,
            #fromJson: fromJson,
          },
        ),
        returnValue: _i4.ifNotNull(
              _i4.dummyValueOrNull<Response>(
                this,
                Invocation.method(
                  #postRequest,
                  [],
                  {
                    #url: url,
                    #headers: headers,
                    #requestBody: requestBody,
                    #toJson: toJson,
                    #fromJson: fromJson,
                  },
                ),
              ),
              (Response v) => _i2.Future<Response>.value(v),
            ) ??
            _FakeFuture_0<Response>(
              this,
              Invocation.method(
                #postRequest,
                [],
                {
                  #url: url,
                  #headers: headers,
                  #requestBody: requestBody,
                  #toJson: toJson,
                  #fromJson: fromJson,
                },
              ),
            ),
      ) as _i2.Future<Response>);
}
